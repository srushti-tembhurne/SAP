#!/usr/local/bin/perl -w
#
# $Id: //ariba/services/monitor/bin/an/edi-interchange-status#7 $

use strict;

use FindBin;
use lib "$FindBin::Bin/../../lib";

use ariba::monitor::QueryManager;
use ariba::rc::InstalledProduct;
use ariba::Ops::DBConnection;

sub main{
	my $debug = 0;
	my $sendEmail = 0;
	my $sendPage = 0;

	while(my $arg=shift(@ARGV)){
		if($arg =~ /^-d/o){ $debug = 1; }
		if($arg =~ /^-e/o){ $sendEmail = 1; };
		if($arg =~ /^-p/o){ $sendPage = 1; };
	}

	my %queries_count = (
		"count of edi documents stuck in queued status (status unchanged for more than 1 hour)" =>
		{

		  sql => q`
              select count(*) as stuck_count
			  from edi_base_document
			  where
				  status='Queued' and
				  ((sysdate-status_changed) * 24) > 1 and
				  document_type = 'EDIDocument' and
				  direction = 1
		  `,
		},

	);

	my %queries = (
		"edi documents stuck in queued status (status unchanged for more than 1 hour)" =>
		{
		  info => "numrows > -1",
		  warn => "numrows > 0",
		  crit => "numrows > 20",
		  format => "edi_document.id %d  %s %d hours\n",

		  sql => q`
              select id as id,document_type as document_type,round((sysdate-status_changed)*24,3) as status_changed
			  from edi_base_document
			  where
				  status='Queued' and
				  ((sysdate-status_changed) * 24) > 1 and
				  document_type = 'EDIDocument' and
				  direction = 1
		  `,
		},

	);

	my $me = ariba::rc::InstalledProduct->new();
	my $edi = ariba::rc::InstalledProduct->new("an", $me->service());

	my $email = $me->default('notify.email');

  # process the count query first

  $queries_count{influx_details} = { measurement => 'an_edi_interchange_status_count'};

  my $q_count = ariba::monitor::QueryManager->newWithDetails(
  	"edi-order-status-count", "an", $me->service(), $me->customer(), \%queries_count
  );

  my $ediDbc = ariba::Ops::DBConnection->connectionsForProductOfDBType($edi, ariba::Ops::DBConnection::typeMainEdi());
  $q_count->setSQLConnectInfoFromDBConnection( $ediDbc );

  $q_count->processQueries($debug, $email, $sendEmail, $sendPage);

  # process detail query

  $queries{influx_details} = { measurement => 'an_edi_interchange_status'};

	my $q = ariba::monitor::QueryManager->newWithDetails(
		"edi-order-status", "an", $me->service(), $me->customer(), \%queries
	);

	$q->setSQLConnectInfoFromDBConnection( $ediDbc );

	$q->processQueries($debug, $email, $sendEmail, $sendPage);
}

main();
