#!/usr/local/bin/perl -w
#
# $Id: //ariba/services/monitor/bin/an/edi-interchange-status#8 $

use strict;

use FindBin;
use lib "$FindBin::Bin/../../lib";

use ariba::monitor::QueryManager;
use ariba::rc::InstalledProduct;
use ariba::Ops::DBConnection;

sub main{
	my $debug = 0;
	my $sendEmail = 0;
	my $sendPage = 0;

	while(my $arg=shift(@ARGV)){
		if($arg =~ /^-d/o){ $debug = 1; }
		if($arg =~ /^-e/o){ $sendEmail = 1; };
		if($arg =~ /^-p/o){ $sendPage = 1; };
	}

	my $me = ariba::rc::InstalledProduct->new();
	my $edi = ariba::rc::InstalledProduct->new("an", $me->service());

	my $ediDbc = ariba::Ops::DBConnection->connectionsForProductOfDBType($edi, ariba::Ops::DBConnection::typeMainEdi());
	# if oracle DBC is not available check if Hana is available
	$ediDbc = ariba::Ops::DBConnection->connectionsForProductOfDBType($edi, ariba::Ops::DBConnection::typeHanaEdi()) unless $ediDbc;

	my $statusChangeHours = ($ediDbc->isHana) ? "SECONDS_BETWEEN(status_changed, CURRENT_TIMESTAMP)/3600" : "((sysdate-status_changed) * 24)";
	my $desc = "DB Type: ".$ediDbc->dbServerType;


	my %queries = (
		"edi documents stuck in queued status (status unchanged for more than 1 hour)" =>
		{
		  info => "numrows > -1",
		  warn => "numrows > 0",
		  crit => "numrows > 20",
		  format => "edi_document.id %d  %s %d hours\n",
		  description => $desc,

		  sql => qq`
		      select id,document_type,$statusChangeHours
			  from edi_base_document 
			  where
				  status='Queued' and 
				  $statusChangeHours > 1 and 
				  document_type = 'EDIDocument' and
				  direction = 1
		  `,
		},

	);

	my $email = $me->default('notify.email');

	my $q = ariba::monitor::QueryManager->newWithDetails(
		"edi-order-status", "an", $me->service(), $me->customer(), \%queries
	);
	
	$q->setSQLConnectInfoFromDBConnection( $ediDbc );

	$q->processQueries($debug, $email, $sendEmail, $sendPage);
}

main();
