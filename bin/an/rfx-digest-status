#!/usr/local/bin/perl -w
#
# $Id: //ariba/services/monitor/bin/an/rfx-digest-status#12 $
#

use strict;

use FindBin;
use lib "$FindBin::Bin/../../../lib";

use ariba::monitor::QueryManager;
use ariba::rc::InstalledProduct;
use ariba::Ops::ProductAPIExtensions;
use ariba::Ops::DBConnection; 
use ariba::Ops::OracleClient;

sub main {
	my $debug = 0;
	my $sendEmail = 0;
	my $sendPage = 0;
	my $queries = {};
	my $runDaily = 0;

	while (my $arg = shift(@ARGV)) {
		if ($arg =~ m/^-d/o) { $debug = 1; }
		if ($arg =~ m/^-e/o) { $sendEmail = 1; }
		if ($arg =~ m/^-p/o) { $sendPage = 1; }
	}

	my $me = ariba::rc::InstalledProduct->new();
	my $service = $me->service();
	my $an = ariba::rc::InstalledProduct->new('an', $service);

	my @communityIds = ariba::Ops::ProductAPIExtensions::communityIdsForProductOfType($an,"supplier");
	my $communitiesList = join(", ", @communityIds);

	my $dbc = ariba::Ops::DBConnection->connectionsForProductOfDBTypeAndSchemaId ( $an, ariba::Ops::DBConnection->typeMainSupplier() );

	exit unless $dbc;
	my $oc = ariba::Ops::OracleClient->newFromDBConnection($dbc);

	#
	# check to see if we have these tables yet
	#
	exit unless($oc->connect);
	my $sql = "select 1 from all_tables where table_name='RFX_DIGEST_ITEM'";
	my (@tables) = $oc->executeSql($sql);
	exit unless(scalar(@tables));

	my $email = $me->default('notify.email');

	my $q;

	$q->{'rfx digest items not processed for 24 hours'} = {
		info => 1,
		uiHint => 'digest status',
		crit => 'answer > 0',
		sql => 'select count(1) from rfx_digest_item rdi where rdi.disabled = 0 and not exists (select 1 from rfx_digest_event rd where rd.event = rdi.event) and rdi.digest_time < (sysdate - 1) and not exists (select 1 from rfx_event_an where id = rdi.event and event_state != 19)',
		runForCommunities => $communitiesList,
		recordMaxResults => 20000,
		recordDataType => "gauge",
	};

    $q->{'discovery digest failed tasks'} = {
        info => 1,
        uiHint => 'failed tasks',
        crit => 'numrows > 0',
        sql => q(select * from st_disp_queue where DESTINATION0 in
                ( 'ADSendRfxDigestsTask', 'ADSendRfxUrgentDigestsTask')
                and status=4),
        runForCommunities => $communitiesList,
        recordMaxResults => 20000,
        recordDataType => "gauge",
    };

	$q->{'rfx digest items not processed for 8 hours'} = {
		info => 1,
		uiHint => 'digest status',
		warn => 'answer > 0',
		sql => 'select count(1) from  rfx_digest_item rdi where rdi.digest_time < (sysdate - 8/24) and rdi.disabled = 0 and not exists (select 1 from rfx_digest_event rd where rd.event = rdi.event)',
		runForCommunities => $communitiesList,
		recordMaxResults => 20000,
		recordDataType => "gauge",
	};

	$q->{'rfx digest items waiting to be sent'} = {
		info => 1,
		uiHint => 'digest status',
		sql => 'select count(1) from  rfx_digest_item rdi where  rdi.disabled = 0 and not exists (select 1 from rfx_digest_event rd where rd.event = rdi.event)',
		runForCommunities => $communitiesList,
		recordMaxResults => 20000,
		recordDataType => "gauge",
	};

	$q->{'E-Intro in quarantine'} = {
		info => 1,
		uiHint => 'event',
		sql => 'select count(1) from rfx_event where event_state = 1005',
		recordMaxResults => 20000,
		recordDataType => "gauge",
	};

	$q->{'E-Intro in pre-quarantine'} = {
		info => 1,
		uiHint => 'event',
		sql => 'select count(1) from rfx_event where event_state = 1004',
		recordMaxResults => 20000,
		recordDataType => "gauge",
	};

	my $qm = ariba::monitor::QueryManager->newWithDetails('rfx', 'an', $service, undef, $q);
	my $dirDbc = ariba::Ops::DBConnection->connectionsForProductOfDBTypeAndSchemaId ( $an, ariba::Ops::DBConnection->typeMain() );
	$qm->setSQLConnectInfoFromDBConnection($dirDbc);
	ariba::Ops::ProductAPIExtensions::setCommunitiesSQLConnectInfoOnQueryManager($an, $qm);
	$qm->processQueriesUsingServer($debug, $email, $sendEmail, $sendPage);

}

main();

