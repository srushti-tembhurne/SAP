#!/usr/local/bin/perl -w

# $Id: //ariba/services/monitor/bin/bpm/purchase-order#13 $

use strict;
use FindBin;
use lib "$FindBin::Bin/../../lib";
use lib "$FindBin::Bin";

use ariba::monitor::QueryManager;
use ariba::monitor::StatusPage;
use ariba::rc::InstalledProduct;
use ariba::Ops::ProductAPIExtensions; 
use ariba::monitor::Url;
use ariba::monitor::Bpm;

our $debug = 0;

sub usage {
    my $error = shift; 

    print <<USAGE;
Usage: $0 [-e|-p|-d|-h]

    -e    Enables sending of email for monitor query.
    -p    Enables sending of pages for monitor query.
    -d    Turns on debug mode. 
    -h    Shows this help.

USAGE

    print "(error) $error\n" if ($error);

    exit();
}

sub main {
    my $sendEmail = 0;
    my $sendPage = 0;

    while (my $arg = shift) {
        if ($arg =~ /^-h/o) { usage();          next; }
        if ($arg =~ /^-d/o) { $debug++;         next; }
        if ($arg =~ /^-e/o) { $sendEmail = 1;   next; }
        if ($arg =~ /^-p/o) { $sendPage = 1;    next; }

        usage("Invalid argument: $arg");
    }

    my $me = ariba::rc::InstalledProduct->new();
    my $tab = ariba::monitor::StatusPage::businessProcessProduct();
    my %queries;
    my %queries2;

    if (ariba::rc::InstalledProduct->isInstalled('an', $me->service())) {
        my $an = ariba::rc::InstalledProduct->new('an', $me->service()); 
        my @communities = grep { $_ % 2 == 0 } $an->communityIdsForProduct(); 
        my $url = ariba::monitor::Bpm::urlForANApp($an, 'ANBusinessProcessMonitor');
        my $processedPayloadIds = {};
        
        foreach my $community (@communities) {
            $queries{"Delivery time threshold exceeded - Unable to transmit from AN to Supplier over cXML Channel for an community $community"} = {
                info    => 1,
                #warn   => 'answer =~ /status: warn/i',
                #crit   => 'answer =~ /status: crit/i',
                crit    => '(answer =~ /time.*out.*after/ && previousAnswer =~ /time.*out.*after/)',
                uiHint  => 'Unable to transmit from AN to Supplier over cXML Channel',
                perl    => sub { 
                    my $params = { 
                        BusinessObject => 'PurchaseOrder', 
                        MetricType => 'CXMLTransmitFailure' 
                    };
                    my $urls = ariba::monitor::Bpm::communityUrlsForUrlAndCommunities($url, $community);
                    my $responses = ariba::monitor::Bpm::getResponsesForUrlsAndParams($urls, $params, 1);

                    return ariba::monitor::Bpm::processResultsFromResponses($responses, $processedPayloadIds);
                },
                correctiveActions   => [
                    Support => 'Notify the supplier of the issue but Ariba can\'t do anything to fix it',
                    Ops => 'No action required',
                ],
                description => 'This metric lists any Purchase Orders that have exceeded the delivery time threshold, and are currently waiting in AN for delivery to the Supplier over an integrated cXML channel.',
                recordItem          => 'numrows',
                recordMaxResults    => 40000,
                inf_field        => 'count',
                inf_tags         => qq(type="unable to transmit from AN to Supplier over cXML Channel",community="$community"),
            };

        }

        $queries{"Delivery time threshold exceeded - Unable to transmit from EDI Gateway to Supplier"} = {
            info    => 1,
            #warn   => 'answer =~ /status: warn/i',
            #crit   => 'answer =~ /status: crit/i',
            crit    => '(answer =~ /time.*out.*after/ && previousAnswer =~ /time.*out.*after/)',
            uiHint  => 'Unable to Transmit from EDI Gateway to Supplier',
            perl    => sub { 
                my $params = { 
                    BusinessObject => 'PurchaseOrder', 
                    MetricType => 'EDITransmitFailure' 
                };
                my $url = ariba::monitor::Bpm::urlForANApp($an, 'EDIBusinessProcessMonitor');
                my $urls = ariba::monitor::Bpm::communityUrlsForUrlAndCommunities($url, 'default');
                my $responses = ariba::monitor::Bpm::getResponsesForUrlsAndParams($urls, $params);

                return ariba::monitor::Bpm::processResultsFromResponses($responses, $processedPayloadIds);
            },
            correctiveActions   => [
                Support => ' Go through the list of documents and see if these are issues with the customer document or functional issues. File CR for functional issues, follow CIRS if necessary',
                Ops => 'No action required',
            ],
            description => 'This metric lists any Purchase Orders that have exceeded the delivery time threshold, and are currently waiting in the EDI gateway for delivery to the Supplier EDI endpoint.',
            recordItem          => 'numrows',
            recordMaxResults    => 40000,
            inf_field        => 'count',
            inf_tags         => qq(type="unable to transmit from EDI Gateway to Supplier",community="default"),
        };
    }

    if (ariba::rc::InstalledProduct->isInstalled('buyer', $me->service())) {
        my $buyer = ariba::rc::InstalledProduct->new('buyer', $me->service()); 

        my $params = { 
            BusinessObject => 'DirectOrder', 
            MetricType => 'ExceededDeliveryTime' 
        };
        my $urls = ariba::monitor::Bpm::communityUrlsForProductAndAppName($buyer, 'UI');

        foreach my $community (keys(%$urls)) {
            my $communityUrl = { $community => $urls->{$community} };
            my $responses = ariba::monitor::Bpm::getResponsesForUrlsAndParams($communityUrl, $params);
            my ($responsesFor4xx, $responsesForNon4xx) = ariba::monitor::Bpm::splitResponsesBetween4xxAndNon4xx($responses);

            $queries{"Delivery time threshold exceeded - Currently waiting for delivery from SSP Buyer to AN (communication error) for buyer community $community"} = {
                info    => 1,
                warn    => 'answer =~ /status: warn/i',
                crit    => '(answer =~ /status: crit/i  && (previousAnswer =~ /status: crit/i)) || (answer =~ /time.*out.*after/ && previousAnswer =~ /time.*out.*after/)',
                severity => 1,
                ticketOnWarnOpenAfterMinutes => 60,
                ticketDueInDays     => 'today',
                uiHint  => 'Currently waiting for delivery from SSP Buyer to AN (Communication Error)',
                perl    => sub { 

                    return ariba::monitor::Bpm::processResultsFromResponses($responsesForNon4xx);
                },
                correctiveActions   => [
                    Ops => 'The problem is likely at the network transport level and Ops should investigate', 
                    Support => 'No action needed. Display as FYI',
                ],
                description => 'This metric lists any Purchase Orders in the Buyer/SSP application that have exceeded the delivery time threshold due to communication errors encountered while attempting to send the Order to AN over the cXML channel.',
                recordItem          => 'numrows',
                recordMaxResults    => 40000,
                inf_field        => 'count',
                inf_tags         => qq(type="awaiting ssp buyer to an communication error",community="$community"),
            };

            $queries{"Delivery time threshold exceeded - Currently waiting for delivery from SSP Buyer to AN (configuration issue) for buyer community $community"} = {
                info    => 1,
                #warn   => 'answer =~ /status: warn/i',
                #crit   => 'answer =~ /status: crit/i',
                crit    => '(answer =~ /time.*out.*after/ && previousAnswer =~ /time.*out.*after/)',
                uiHint  => 'Currently waiting for delivery from SSP Buyer to AN (Configuration Issue)',
                perl    => sub { return ariba::monitor::Bpm::processResultsFromResponses($responsesFor4xx); },
                skipNotifications => 1,
                correctiveActions   => [
                    Ops => 'No action required', 
                    Support => 'The problem is likely related to customer configuration problem in the application, either in SSP or AN. Once the exact nature of the problem is determined, the customer should be advised of the best corrective action.',
                ],
                description => 'This metric lists any Purchase Orders in the Buyer/SSP application that have exceeded the delivery time threshold due to configuration issues encountered while attempting to send the Order to AN over the cXML channel.',
                recordItem          => 'numrows',
                recordMaxResults    => 40000,
                inf_field        => 'count',
                inf_tags         => qq(type="awaiting ssp buyer to an config issue",community="$community"),
            };
        }
    }

    my $email = $me->default('notify.email');

    if (%queries) {
        my $qm = ariba::monitor::QueryManager->newWithDetails('PO-has-exceeded-delivery-time-threshold', $tab, $me->service(), $me->customer(), \%queries);
        $qm->processQueries($debug, $email, $sendEmail, $sendPage);
    }

    if (%queries2) {
        my $qm = ariba::monitor::QueryManager->newWithDetails('PO-has-exceeded-delivery-time-threshold', $tab, $me->service(), $me->customer(), \%queries2);
        $qm->processQueriesUsingServer($debug, $email, $sendEmail, $sendPage);
    }
}

main(@ARGV);

__END__
