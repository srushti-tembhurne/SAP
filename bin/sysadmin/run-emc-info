#!/usr/local/bin/perl -w

=pod

=head1 NAME

run-emc-info

=head1 VERSION

 $Id: //ariba/services/monitor/bin/sysadmin/run-emc-info#5 $
 Last modified by $Author: bob.mcgowan $ on $Date: 2016/08/01 $

=head1 DESCRIPTION

Remotely executes bin/sysadmin/emc-disk-info on all database hosts,
and saves the results to mon's dynamic docroot.

=head1 AUTHOR

Alex Sandbak <asandbak@ariba.com>

=cut

use strict;
use FindBin;
use lib "$FindBin::Bin/../../lib";
use lib "$FindBin::Bin/../../lib/perl";

use ariba::monitor::misc;
use ariba::rc::CipherStore;
use ariba::rc::Globals;
use ariba::rc::InstalledProduct;
use ariba::rc::Utils;
use File::Copy;
use File::Path;

my $debug = 0;

sub usage {
	print "run-emc-info\n";
	print "Remotely executes 'emc-disk-info' on all database hosts, and\n";
	print "saves the results to mon's dynamic docroot.\n\n";

	print "Usage: ./run-emc-info <args>\n";
	print "        -d  Debug, print results to STDOUT\n";
	print "        -h  This help screen\n\n";

	exit;
}

sub main {
	while (my $arg = shift @ARGV) {
		if ($arg =~ /-d/) { $debug = 1 }
		if ($arg =~ /-h/) { usage(); }
	}

	my $me = ariba::rc::InstalledProduct->new();

	my @dbHosts = $me->hostsForRoleInCluster('product-db-server', $me->currentCluster());

	if (scalar(@dbHosts == 0)) {
		my @dbHosts = $me->hostsForRoleInCluster('database', $me->currentCluster());
	}

	my $user        = ariba::rc::Globals::deploymentUser($me->name(), $me->service());
        my $cipherStore = ariba::rc::CipherStore->new($me->service());
	my $password    = $cipherStore->valueForName($user);

	# Sort hosts by which datacenter they're in
	my %sortedHosts = ();

	for my $host (@dbHosts) {
		my $domain = $host;
		$domain =~ s/.*?\.(.*?)\..*/($1)/;

		$sortedHosts{$domain}{$host} = 1;
	}

	# output from each host will be added to this array
	my @allOutput = ();

	for my $domain (reverse sort keys %sortedHosts) {

		for my $host (sort keys %{$sortedHosts{$domain}}) {

			my @output  = ();
			my $ssh     = ariba::rc::Utils::sshCmd();

			my $command = sprintf('%s %s@%s %s/%s', $ssh, $user, $host, $me->installDir(), 'bin/sysadmin/emc-disk-info');

			print "Executing command: $command\n\n" if $debug;

			ariba::rc::Utils::sshCover($command, $password, undef, undef, \@output);

			for my $row (@output) {
				push( @allOutput, $row );
			}
		}
	}

	my $storageDir = ariba::monitor::misc::autoGeneratedDocsDir() . '/emc';

	my $tempfile = $storageDir ."/emc-disk-info.temp";
	my $realfile = $storageDir ."/emc-disk-info.txt";

	mkpath($storageDir) unless -e $storageDir;

	if ($debug) {
		open(OUT, '> -'); # prints to stdout
	} else {
		open(OUT, "> $tempfile");
	}

	for my $row (@allOutput) {
		print OUT $row."\n";
	}

	print OUT "\nLast updated on ". scalar(localtime()) ."\n";
	close(OUT);

	move($tempfile, $realfile) unless $debug;
}

main();
