#!/usr/local/bin/perl
#
# $Id: //ariba/services/monitor/bin/s4/sizeof-bulk-allocated-resources#25 $
#

use strict;
use FindBin;
use lib "$FindBin::Bin/../../lib";

use ariba::monitor::QueryManager;
use ariba::Ops::OracleClient;
use ariba::Ops::ProductAPIExtensions;
use ariba::Ops::DBConnection;
use ariba::rc::InstalledProduct;
use ariba::Ops::ServiceController;

my $maxResults = 17520; # (a year of data at twice an hour)

sub main {
	my $debug = 0;
	my $quiet = 0;
	my $sendEmail = 0;
	my $sendPage = 0;
	my $productName;

	while(my $arg=shift(@ARGV)){
			print STDERR "parsing arg $arg\n" if $debug && !$quiet;
			if($arg =~ /^-d/o){ $debug=1; }
			if($arg =~ /^-e/o){ $sendEmail=1; };
			if($arg =~ /^-p$/o){ $sendPage=1; };
			if($arg =~ /^-prod/o){ $productName=shift(@ARGV); };
	}

	my $me = ariba::rc::InstalledProduct->new();
	my $cluster = $me->currentCluster();
	my $service = $me->service();

	my $product;
	unless (ariba::rc::InstalledProduct->isInstalled($productName, $service)) {
		exit(0);
	}
	$product = ariba::rc::InstalledProduct->new($productName, $service);


	my ($sharedStarSchemas, $dedicatedStarSchemas);
	my @dedicatedConn = ariba::Ops::DBConnection->connectionsForProductOfDBType(
			$product, ariba::Ops::DBConnection->typeMainStarDedicated());
	$dedicatedStarSchemas = scalar(@dedicatedConn);
	my @sharedConn = ariba::Ops::DBConnection->connectionsForProductOfDBType(
			$product, ariba::Ops::DBConnection->typeMainStarShared());
	$sharedStarSchemas = scalar(@sharedConn);

	my(%bySid);

	foreach my $conn (@dedicatedConn) {
		my $sid = $conn->sid();
		$bySid{$sid} = {} unless defined($bySid{$sid});
		$bySid{$sid}->{$conn->schemaId()} = 1;
	}

	my $defaultDbc = ariba::Ops::DBConnection->connectionsForProductOfDBType($product, ariba::Ops::DBConnection->typeMain());
        my $dbh= ariba::Ops::DBConnection->getDBClientFromDbc($defaultDbc);
	my $sql = "select distinct databaseschema from schematypemaptab where schematype = 'Star' and isDedicated = 1";

	exit unless $dbh->connect();
	my @usedSchemas = $dbh->executeSql($sql);

	foreach my $schema (@usedSchemas) {
		$schema =~ m/(\d+)$/;
		my $id = $1;
		foreach my $key (keys %bySid) {
			delete $bySid{$key}->{$id} if($bySid{$key}->{$id});
		}
	}

	my $skip = 0;

	my %queries  = ();

	$queries{"Number of dedicated star schemas (total)"} = {
		info => 1,
		perl => $dedicatedStarSchemas,
		recordMaxResults => $maxResults,
		recordDataType => 'gauge',
		recordItem => 'answer'
	};

        my $unallocatedStarSchemaWarn = 30;
        my $unallocatedStarSchemaCrit = 20;

	foreach my $key (keys %bySid) {
		my $availSchemas = scalar keys(%{$bySid{$key}});
		my ($warn, $crit);

		# Warn and Crit values for unallocated dedicated schemas should be the same accross all production services
		# Tracked by: HOA-14511
		if (ariba::Ops::ServiceController::isProductionServicesOnly($service)){
                        $warn = "answer <= $unallocatedStarSchemaWarn";
                        $crit = "answer <= $unallocatedStarSchemaCrit";
		}

		if ($service =~ /sales/i) {
			$warn = "answer <= 10";
			$crit = "answer <= 5";
		}

		$queries{"Number of dedicated star schemas on $key (unallocated)"} = {
			info => 1,
			warn => $warn,
			crit => $crit,
			perl => $availSchemas,
			recordMaxResults => $maxResults,
			recordDataType => 'gauge',
			recordItem => 'answer',
			ticketOnWarnOpenAfterMinutes => 1,
		};
	}

	$queries{"Number of dedicated star schemas (unallocated)"} = {
		info => 1,
		sql => "select ($dedicatedStarSchemas - count(distinct databaseschema)) from schematypemaptab where schematype = 'Star' and isDedicated = 1",
		recordMaxResults => $maxResults,
		recordDataType => 'gauge',
		recordItem => 'answer'
	};

	$queries{"Number of shared star schemas (total)"} = {
		info => 1,
		perl => $sharedStarSchemas,
		recordMaxResults => $maxResults,
		recordDataType => 'gauge',
		recordItem => 'answer'
	};

	my $dbc = ariba::Ops::DBConnection->connectionsForProductOfDBType(
		$product, ariba::Ops::DBConnection->typeMain()
	);

	undef($dbh);
	if($dbc) {
		$dbh = ariba::Ops::DBConnection->getDBClientFromDbc($dbc);
	}
	if($dbh && $dbh->connect()) {

		my $sql = q`
			select
				distinct databaseschema, count(databaseschema)
			from
				schematypemaptab
			where
				schematype = 'Star' and isDedicated = 0 and realmid != -1
			group by databaseschema
			order by count(databaseschema) desc
		`;
		my @results = $dbh->executeSql($sql);

		foreach my $row (@results) {
			my ($schemaName, $realmCount) = split($dbh->colsep(), $row);
			$queries{"Number of realms for shared star schema $schemaName"} = {
				info => 1,
				perl => $realmCount,
				recordMaxResults => $maxResults,
				recordDataType => 'gauge',
				recordItem => 'answer'
			};
		}
	}

	my $email = $me->default('notify.email');

	my $q = ariba::monitor::QueryManager->newWithDetails(
		"sizeof-bulk-allocated-resources", $product->name(), $service, $product->customer(), \%queries
	);

	$q->setSQLConnectInfoFromDBConnection( $defaultDbc );
        ariba::Ops::ProductAPIExtensions::setTransactionSchemaSQLConnectInfoOnQueryManager($product, $q);

	$q->processQueriesUsingServer($debug, $email, $sendEmail, $sendPage);
}

main();
