#!/usr/local/bin/perl

# $Id: //ariba/services/monitor/bin/common/hana-multipath-status#3 $

use strict;
use warnings;
use Data::Dumper;

use FindBin;
use lib "$FindBin::Bin/../../lib";
use ariba::rc::InstalledProduct;
use ariba::rc::Utils;
use ariba::rc::CipherStore;
use ariba::monitor::Query;
use ariba::monitor::QueryManager;


sub usage {
    my $error = shift;

    print <<USAGE;
Usage: $0 [-e|-p|-d|-h]

    -e    Enables sending of email for monitor query.
    -p    Enables sending of pages for monitor query.
    -d    Turns on debug mode.
    -h    Shows this help.

USAGE

    print "(error) $error\n" if ($error);

    exit();
}



sub main {
    my $sendEmail = 0;
    my $sendPage = 0;
    my $debug = 0;

    while (my $arg = shift) {
        if ($arg =~ /^-h$/o) { usage();         next; }
        if ($arg =~ /^-d$/o) { $debug++;        next; }
        if ($arg =~ /^-e$/o) { $sendEmail = 1;  next; }
        if ($arg =~ /^-p$/o) { $sendPage = 1;   next; }

        usage("Invalid argument: $arg");
    }

    my $me = ariba::rc::InstalledProduct->new() ;
    my $service = $me->service();
    my $cipher = ariba::rc::CipherStore->new($service);
    my $user = "mon$service";
    my $password = $cipher->valueForName($user);
    my %queries;
    my $hana_role = 'hana-db-server';
    my @hana_servers = my @hosts = $me->hostsForRoleInCluster( $hana_role, 'primary' ); 
    my $queryManagerName = "Hana Multipath Status";

    foreach my $hana_host (@hana_servers) {
        my $cmd = "ssh $user\@$hana_host 'sudo /sbin/service multipathd status'";
    
        my @output;
    
        ariba::rc::Utils::executeRemoteCommand( $cmd, $password, 0, undef, undef, \@output );
    
        my $result = join(" ", @output);

        print "$hana_host Status is $result\n" if $debug;

        my $status = "Error: Multipathd is not Running"; 
        $status = "OK", if ($result =~ /running/i);    
 
        $queries{"$hana_host"} = {
            crit    => 'answer !~ /OK/i',
            perl    => sub { return $status; },
            description => 'Running $cmd',
            correctiveActions => [
                Ops => 'Contact System Admin Team',
            ],
            inf_field => "status",
            inf_tags => "hana_host=\"$hana_host\"",
        };

    }

    my $email = $me->default('notify.email');

    $queries{influx_details} = {measurement => "hana_multipath_status"};

    my $qm = ariba::monitor::QueryManager->newWithDetails($queryManagerName, $me->name(), $me->service(), $me->customer(), \%queries);
    $qm->processQueries($debug, $email, $sendEmail, $sendPage);

}


main();
