#sid  !! influx_tablename[,special_table_level_field] !! metric !!  sql 
#single value query##############################
default !! hana_health !! current_alerts !! select status || ' (' || value || ' )' from M_SYSTEM_OVERVIEW where section= 'Statistics' and name = 'Alerts'
default !! hana_health !! cpu_overal_status !! select status || ' (' || value || ' )' from M_SYSTEM_OVERVIEW where section= 'CPU' and name = 'CPU'
default !! hana_health !! data_disk_status !! select status || ' (' || value || ' )' from M_SYSTEM_OVERVIEW where section= 'Disk' and name = 'Data'
default !! hana_health !! log_disk_status !! select status || ' (' || value || ' )' from M_SYSTEM_OVERVIEW where section= 'Disk' and name = 'Log'
default !! hana_health !! trace_disk_status !! select status || ' (' || value || ' )' from M_SYSTEM_OVERVIEW where section= 'Disk' and name = 'Trace'
default !! hana_health !! memory_status !! select status || ' (' || value || ' )' from M_SYSTEM_OVERVIEW where section= 'Memory' and name = 'Memory'
default !! hana_health !! service_all_started_status !! select status || ' (' || value || ' )' from M_SYSTEM_OVERVIEW where section= 'Services' and name = 'All Started'
default !! hana_health !! service_min_started_time !! select value from M_SYSTEM_OVERVIEW where section= 'Services' and name = 'Min Start Time'
default !! hana_health !! service_max_started_time !! select value from M_SYSTEM_OVERVIEW where section= 'Services' and name = 'Max Start Time'
default !! hana_health !! active_connection !! select count(*) from m_connections where connection_status = 'RUNNING'
default !! hana_health !! percent_active_blocked !! SELECT round((blocked/active)*100,2) percent_blocked from (select count(*) active from M_TRANSACTIONS WHERE TRANSACTION_STATUS = 'ACTIVE') , (select count(*) blocked from M_BLOCKED_TRANSACTIONS )
default !! hana_health !! smart_merge_lock_count !! select count(*) from M_SERVICE_THREAD_CALLSTACKS where frame_level = 2 and frame_name like 'Synchronization::ReadWriteLock::timedWaitLockExclusive%' and thread_id in (select thread_id from M_SERVICE_THREADS where thread_type = 'SmartMerger')
default !! hana_health !! wait_thread_count !! select  count(*) threads_in_wait from m_service_threads where thread_state like '%Wait%'
default !! hana_health !! MVCC_version_count !! select max(value) num_of_versions from m_mvcc_tables where name = 'NUM_VERSIONS'
default !! hana_health !! active_connection_count_1min !! select count(*) connection_count from m_connections where user_name not like '_SYS%' and user_name != 'SYSTEM' and start_time >= add_seconds(current_timestamp, -60) and connection_status = 'RUNNING'
default !! hana_health !! active_connection_count_5min !! select count(*) connection_count from m_connections where user_name not like '_SYS%' and user_name != 'SYSTEM' and start_time >= add_seconds(current_timestamp, -300) and connection_status = 'RUNNING'
default !! hana_health !! days_until_license_expiration !! select IFNULL(DAYS_BETWEEN(current_timestamp, expiration_date), 9999) from M_LICENSE
default !! hana_health !! last_full_backup_size_in_GB !! select round(sum(backup_size/(1024*1024*1024))) "Size(GB)" from M_BACKUP_CATALOG_FILES where entry_id = ( select max(entry_id) from m_backup_catalog where entry_type_name = 'complete data backup' and state_name='successful')
default !! hana_health !! last_good_full_backup_duration !! select round(SECONDS_BETWEEN( sys_start_time,sys_end_time )/60) ||' Minutes' from m_backup_catalog where entry_id = ( select max(entry_id) from m_backup_catalog where entry_type_name = 'complete data backup' and state_name='successful' )
default !! hana_health,full_backup_age_crit_threshold !! last_good_full_backup_age_in_days !! select DAYS_BETWEEN(sys_start_time,current_timestamp ) from m_backup_catalog where entry_id = ( select max(entry_id) from m_backup_catalog where entry_type_name = 'complete data backup' and state_name='successful' )
default !! hana_health !! last_incr_backup_size_in_GB !! select round(sum(backup_size/(1024*1024*1024)), 2) "Size(GB)" from M_BACKUP_CATALOG_FILES where entry_id = ( select max(entry_id) from m_backup_catalog where (entry_type_name like 'incr%backup' or entry_type_name like 'diff%backup') and state_name='successful') 
default !! hana_health !! last_good_incr_backup_duration !! select round(SECONDS_BETWEEN( sys_start_time,sys_end_time )/60, 2) ||' Minutes' from m_backup_catalog where entry_id = ( select max(entry_id) from m_backup_catalog where (entry_type_name like 'incr%backup' or entry_type_name like 'diff%backup') and state_name='successful' )
default !! hana_health,incr_backup_age_crit_threshold !! last_good_incr_backup_age_in_days !! select DAYS_BETWEEN(sys_start_time,current_timestamp ) from m_backup_catalog where entry_id = ( select max(entry_id) from m_backup_catalog where (entry_type_name like 'incr%backup' or entry_type_name like 'diff%backup') and state_name='successful' )
default !! hana_health,any_backup_age_crit_threshold !! last_good_any_backup_age_in_days !! select DAYS_BETWEEN(sys_start_time,current_timestamp ) from m_backup_catalog where entry_id = ( select max(entry_id) from m_backup_catalog where entry_type_name like '%data backup' and state_name='successful' )
default !! cluster_replication_overall_status !! replication_error_count !! select count(*) from M_SERVICE_REPLICATION where replication_status != 'ACTIVE' OR round(seconds_between(replayed_log_position_time, current_timestamp)/60,2) > 240

default !! indexserver_current_peak_used_mem !! peak !! SELECT ROUND(SUM(MEM)/1024/1024/1024,2) as PEAK_USED_MEMORY_GB FROM (SELECT SUM(CODE_SIZE+SHARED_MEMORY_ALLOCATED_SIZE) AS MEM FROM SYS.M_SERVICE_MEMORY where service_name = 'indexserver' UNION SELECT SUM(INCLUSIVE_PEAK_ALLOCATION_SIZE) AS MEM FROM M_HEAP_MEMORY_RESET WHERE DEPTH = 0)
default !! indexserver_current_peak_used_mem !! allocated !! select round((SUM(allocation_limit)/1024/1024/1024), 2) from M_SERVICE_MEMORY where service_name = 'indexserver'
default !! indexserver_current_peak_used_mem !! current !! select round((SUM(TOTAL_MEMORY_USED_SIZE)/1024/1024/1024), 2) from M_SERVICE_MEMORY where service_name = 'indexserver'

#multirow value query#########################
#sid  !! influx_tablename !! metric !!  sql !! fieldname
default !! hana_hosts !! hosts_AUTO !! select host, host_active, host_status, concat(concat(nameserver_config_role,' / '), nameserver_actual_role), concat(concat(indexserver_config_role, ' / '),indexserver_actual_role), to_char(storage_partition), failover_status from M_LANDSCAPE_HOST_CONFIGURATION !! Host|t,IsActive,Status,NameserverConfiguredAndActualRole,IndexserverConfiguredAndActualRole,StoragePartition,FailoverStatus

default !! hana_system !! system_AUTO !! select name, value from m_system_overview where section = 'System' !! property|t,value|s

default !! hana_alert_details !! alert_details_AUTO !! SELECT A.ALERT_TIMESTAMP,A.ALERT_DETAILS FROM _SYS_STATISTICS.STATISTICS_ALERTS A ,_SYS_STATISTICS.STATISTICS_CURRENT_ALERTS CA where A.ALERT_ID = CA.ALERT_ID AND A.INDEX = CA.INDEX AND A.SNAPSHOT_ID = CA.SNAPSHOT_ID and A.ALERT_RATING =5 !! ALERT_TIMESTAMP,ALERT_DETAILS 
default !! hana_service_restarts !! restart_AUTO !! select host, case when (SECONDS_BETWEEN(max(START_TIME) OVER (PARTITION BY HOST) ,CURRENT_TIMESTAMP )/3600) < 3 then 'service restarted' else 'running fine' end as result from M_SERVICE_STATISTICS !! host|t,result

default !! hana_cpu_status !! cpu_AUTO !! select a.host, a.value, concat(b.cpu,'%') from  (select host, value from M_HOST_INFORMATION  where key = 'cpu_summary') a, (select host, MAX("TOTAL_CPU") as cpu from M_SERVICE_STATISTICS group by host) b where a.host = b.host !! Host|t,CoreThreadsClock,PercentCpuUsage

default !! disk_data_by_host !! disk_data_AUTO !! select host, to_char(disk_id), path , to_char(round(used_size/1024/1024/1024,2)), to_char(round(total_size/1024/1024/1024,2)), to_char(round((used_size * 100/total_size),2)) from M_DISKS where usage_type = 'DATA' order by host !! Host|t,DiskId|t,Path|t,GBUsed,GBTotal,PercentUsed

default !! log_data_by_host !! log_data_AUTO !! select host, to_char(disk_id), path , to_char(round(used_size/1024/1024/1024,2)), to_char(round(total_size/1024/1024/1024,2)), to_char(round((used_size * 100/total_size),2)) from M_DISKS where usage_type = 'LOG' order by host !! Host|t,DiskId|t,Path|t,GBUsed,GBTotal,PercentUsed

default !! trace_data_by_host !! trace_data_AUTO !! select host, to_char(disk_id), path , to_char(round(used_size/1024/1024/1024,2)), to_char(round(total_size/1024/1024/1024,2)), to_char(round((used_size * 100/total_size),2)) from M_DISKS where usage_type = 'TRACE' order by host !! Host|t,DiskId|t,Path|t,GBUsed,GBTotal,PercentUsed

default !! virtual_memory_utilization_by_host !! memory_utilization_AUTO !! select host, to_char(round((USED_PHYSICAL_MEMORY + USED_SWAP_SPACE) /1024/1024/1024,2)), to_char(round((USED_PHYSICAL_MEMORY + FREE_PHYSICAL_MEMORY + USED_SWAP_SPACE + FREE_SWAP_SPACE) /1024/1024/1024, 2)), concat(round(((USED_PHYSICAL_MEMORY + USED_SWAP_SPACE)/(USED_PHYSICAL_MEMORY + FREE_PHYSICAL_MEMORY+USED_SWAP_SPACE + FREE_SWAP_SPACE)) * 100,2),'%') from PUBLIC.M_HOST_RESOURCE_UTILIZATION !! Host|t,GBUsed,GBAvailable,PercentUsed

default !! status_by_host !! status_AUTO !! select a.host, to_char(a.port), a.service_name, a.active_status, a.detail,to_char(b.start_time),to_char(b.process_cpu),to_char(round(b.total_memory_used_size/1024/1024,2)),to_char(round(b.effective_allocation_limit/1024/1024,2)),to_char(round(b.physical_memory/1024/1024,2)) from M_SERVICES a left outer join (select x.host, x.port, x.service_name, x.total_memory_used_size, x.effective_allocation_limit, y.start_time, y.process_cpu, y.physical_memory from M_SERVICE_MEMORY x, M_SERVICE_STATISTICS y where x.host = y.host and x.port = y.port and x.service_name =y.service_name)  b on a.host =b.host and a.port = b.port and a.service_name = b.service_name order by a.host, a.service_name !! Host|t,Port|t,ServiceName|t,IsActive,Detail|s,StartTime|s,CPUPercentageUsed,MBMemoryUsed,EffectiveAllocationLimit,PhysicalMemoryonHost

default !! connection_status_count !! connection_AUTO !! select connection_status, to_char(count(*)) from m_connections where connection_status != '' group by connection_status !! connection_status|t,count

default !! redo_log_size_per_host !! redo_log_size_AUTO !! select host, to_char(round(sum(backup_size)/1024/1024/1024,2)) from m_backup_catalog_files, m_backup_catalog where m_backup_catalog_files.entry_id = m_backup_catalog.entry_id and entry_type_name = 'log backup' and sys_start_time >= add_seconds(current_date, -3600) group by host !! Host|t,GBRedoLogsize

default !! block_transactions_over_5mins !! block_transactions_AUTO !! SELECT B.HOST, B.PORT,B.BLOCKED_TIME AS BLOCKED_TIME,B.WAITING_SCHEMA_NAME AS WAITING_SCHEMA_NAME,B.WAITING_TABLE_NAME AS WAITING_TABLE_NAME,B.LOCK_TYPE AS LOCK_TYPE,B.LOCK_MODE AS LOCK_MODE,C.CLIENT_HOST AS LOCK_OWNER_HOST,C.USER_NAME AS LOCK_OWNER_USER_NAME,C.LAST_ACTION AS LOCK_OWNER_LAST_ACTION,P.STATEMENT_STRING AS BLOCKED_STATEMENT_STRING FROM SYS.M_BLOCKED_TRANSACTIONS B,SYS.M_TRANSACTIONS T,SYS.M_CONNECTIONS C,SYS.M_TRANSACTIONS TB,SYS.M_CONNECTIONS CB LEFT OUTER JOIN SYS.M_PREPARED_STATEMENTS P ON CB.CURRENT_STATEMENT_ID = P.STATEMENT_ID WHERE B.LOCK_OWNER_TRANSACTION_ID = T.TRANSACTION_ID AND T.CONNECTION_ID = C.CONNECTION_ID AND B.BLOCKED_TRANSACTION_ID = TB.TRANSACTION_ID AND TB.CONNECTION_ID = CB.CONNECTION_ID AND B.BLOCKED_TIME > add_seconds(current_date, -300) !! Host|t,Port|t,BLOCKED_TIME,WAITING_SCHEMA_NAME,WAITING_TABLE_NAME,LOCK_TYPE,LOCK_MODE,LOCK_OWNER_HOST,LOCK_OWNER_USER_NAME,LOCK_OWNER_LAST_ACTION,BLOCKED_STATEMENT_STRING

default !! top_delta_merge_transaction !! merge_transaction_AUTO !! SELECT TOP 10 HOST, SCHEMA_NAME, TABLE_NAME, to_char(EXECUTION_TIME), to_char(MERGED_DELTA_RECORDS) from M_DELTA_MERGE_STATISTICS order by execution_time desc !! Host|t,SchemaName|t,TableName|t,ExecutionTimeInMilliSeconds,MergedDeltaRecordsCount

default !! last_backup_info !! last_backup_AUTO !! select a.entry_type_name, a.backup_id, a.sys_start_time, a.sys_end_time, round(SECONDS_BETWEEN( a.sys_start_time, a.sys_end_time )/60, 2), round(sum(b.backup_size/(1024*1024*1024)), 2), state_name from m_backup_catalog a left outer join m_backup_catalog_files b on (a.entry_id = b.entry_id) where a.entry_type_name like '%data backup' and state_name='successful' group by a.backup_id, a.entry_type_name,a.sys_start_time, a.sys_end_time, a.state_name order by a.sys_start_time desc limit 20 !! entry_type_name,backup_id|t,sys_start_time,sys_end_time,duration_mins,size_gb,state_name

default !! data_size_used_by_host !! data_size_used_AUTO !! select data_volume.host as HOST, DATA_SIZE_USED_IN_MB, DATA_SIZE_PCT_USED from (select host, round(sum(USED_SIZE)/1024/1024,2) as DATA_SIZE_USED_IN_MB, round(sum(USED_SIZE)/sum(TOTAL_SIZE) * 100,2) as DATA_SIZE_PCT_USED from M_VOLUME_FILES where FILE_TYPE='DATA' group by host) as data_volume order by data_volume.host asc !! host|t,DATA_SIZE_USED_IN_MB,DATA_SIZE_PCT_USED

default !! log_size_used_by_host !! log_size_used_AUTO !! select log_volume.host as HOST, LOG_SIZE_USED_IN_MB, LOG_SIZE_PCT_USED from (select host, round(sum(ls.USED_SIZE)/1024/1024,2) as LOG_SIZE_USED_IN_MB, round(sum(ls.USED_SIZE)/sum(ls.TOTAL_SIZE) * 100,2) as LOG_SIZE_PCT_USED from M_LOG_SEGMENTS ls group by host) as log_volume !! HOST|t,LOG_SIZE_USED_IN_MB,LOG_SIZE_PCT_USED

default !! physical_memory_utilization_by_host !! physical_memory_utilization_AUTO !! select host, to_char(round(USED_PHYSICAL_MEMORY/1024/1024/1024,2)), to_char(round((USED_PHYSICAL_MEMORY + FREE_PHYSICAL_MEMORY) /1024/1024/1024, 2)),to_char(round(ALLOCATION_LIMIT/1024/1024/1024,2)), to_char(round((USED_PHYSICAL_MEMORY/(USED_PHYSICAL_MEMORY + FREE_PHYSICAL_MEMORY)) * 100,2)) from PUBLIC.M_HOST_RESOURCE_UTILIZATION !! Host|t,GBUsedPhysicalMemory,GBAvailablePhysicalMemory,AllocationLimit,PercentUsed

default !! total_memory_used_by_host !! total_memory_used_AUTO !! SELECT host,round(INSTANCE_TOTAL_MEMORY_USED_SIZE/1024/1024/1024,2) as TOTAL_MEMORY_USED_IN_GB FROM M_HOST_RESOURCE_UTILIZATION !! host|t,TOTAL_MEMORY_USED_IN_GB

default !! total_heap_memory_used_by_host !! total_heap_memory_used_AUTO !! SELECT host, round(sum(HEAP_MEMORY_USED_SIZE/1024/1024/1024),2) as HEAP_MEMORY_USED_IN_GB FROM SYS.M_SERVICE_MEMORY group by host !! host|t,HEAP_MEMORY_USED_IN_GB

default !! persistance_comp_inside_heap !! persistance_heap_memory_in_GB_AUTO !! SELECT host, round(sum(EXCLUSIVE_SIZE_IN_USE) / 1024 / 1024 /1024, 2) FROM M_HEAP_MEMORY where CATEGORY like 'Pool/PersistenceManager%' group by host !! host|t,EXCLUSIVE_SIZE_IN_USE

default !! datastructure_component_inside_heap_memory !! datastructure_heap_memory_in_GB_AUTO !! SELECT host, round(sum(EXCLUSIVE_SIZE_IN_USE) / 1024 / 1024 /1024, 2) FROM M_HEAP_MEMORY where CATEGORY in ('Pool/malloc/libhdbcscommon.so', 'Pool/itab') group by host !! host|t,EXCLUSIVE_SIZE_IN_USE

default !! memory_management_component_inside_heap_memory !! memory_management_heap_memory_in_GB_AUTO !! SELECT host, round(sum(EXCLUSIVE_SIZE_IN_USE) / 1024 / 1024 /1024, 2) FROM M_HEAP_MEMORY where category like '%MemoryMapLevel2Blocks' group by host !! host|t,EXCLUSIVE_SIZE_IN_USE

default !! kernal_merge_stat_component_inside_heap_memory !! kernal_merge_heap_memory_in_GB_AUTO !! SELECT host,round(sum(EXCLUSIVE_SIZE_IN_USE) / 1024 / 1024 /1024, 2) FROM M_HEAP_MEMORY where (CATEGORY='Pool/Statistics' OR CATEGORY='Pool/MergeMonitor')  group by host !! host|t,EXCLUSIVE_SIZE_IN_USE

default !! prepare_statement_cache_inside_heap_memory !! prepare_statement_cache_heap_memory_in_GB_AUTO !! SELECT host,round(sum(EXCLUSIVE_SIZE_IN_USE) / 1024 / 1024 /1024, 2) FROM M_HEAP_MEMORY where CATEGORY='Pool/RowEngine/SQLPlan'  group by host !! host|t,EXCLUSIVE_SIZE_IN_USE

default !! transaction_management_inside_heap_memory !! transaction_management_heap_memory_in_GB_AUTO !! SELECT host,round(sum(EXCLUSIVE_SIZE_IN_USE) / 1024 / 1024 /1024, 2) FROM M_HEAP_MEMORY where CATEGORY='Pool/RowEngine/Transaction' group by host !! host|t,EXCLUSIVE_SIZE_IN_USE

default !! auxilary_row_store_component_inside_heap_memory !! auxilary_row_store_heap_memory_in_GB_AUTO !! SELECT host,round(sum(EXCLUSIVE_SIZE_IN_USE) / 1024 / 1024 /1024, 2) FROM M_HEAP_MEMORY where  (CATEGORY like 'Pool/RowEngine%' OR CATEGORY='Pool/malloc/libhdbrskernel.so') and CATEGORY!='Pool/RowEngine/SQLPlan' and CATEGORY!='Pool/RowEngine/Transaction' group by host !! host|t,EXCLUSIVE_SIZE_IN_USE

default !! stack_allocated_kernal_datastructure_component_inside_heap_memory !! stack_allocated_kernal_datastructure_heap_memory_in_GB_AUTO !! SELECT host,round(sum(EXCLUSIVE_SIZE_IN_USE) / 1024 / 1024 /1024, 2) FROM M_HEAP_MEMORY where  CATEGORY='StackAllocator' group by host !! host|t,EXCLUSIVE_SIZE_IN_USE

default !! misc_component_inside_heap_memory !! misc_heap_memory_in_GB_AUTO !! select host, round(sum(exclusive_size_in_use)/1024/1024/1024,2) from m_heap_memory where  category not in ('Pool/malloc/libhdbrskernel.so', 'StackAllocator', 'Pool/RowEngine/SQLPlan', 'Pool/RowEngine/Transaction', 'Pool/MergeMonitor', 'Pool/Statistics' , 'Pool/malloc/libhdbcscommon.so', 'Pool/itab','Pool/malloc/libhdbbasement.so', 'Pool/malloc/libhdbcs.so') and category not like '%MemoryMapLevel2Blocks' and category not like 'Pool/RowEngine%' and category not like 'Pool/PersistenceManager%' and category not like 'Pool/AttributeEngine%' group by host !! host|t,exclusive_size_in_use

default !! misc_component_inside_heap_memory !! misc_heap_total_memory_in_GB_AUTO !! select host, round(value/1024/1024/1024,2) from m_host_information where key = 'mem_phys' !! host|t,total_heap_size

default !! cluster_replication_status !! cluster_replication_status_AUTO !! select a.host,to_char(a.volume_id), b.service_name, a.secondary_host, a.secondary_active_status, a.replication_status,substr(a.REPLICATION_STATUS_DETAILS,1,45) from M_SERVICE_REPLICATION a, M_VOLUMES b where a.volume_id = b.volume_id order by a.volume_id !! Host|t,VolumeId|t,ServiceName,SecondaryHost,SecondaryActiveStatus,ReplicationStatus,ReplicationStatusDetails|s

default !! log_shipping_replication_status !! log_shipping_replication_status_AUTO !! select host,to_char(volume_id), secondary_host, replication_status, to_char(last_log_position), to_char(shipped_log_position), to_char(last_log_position - shipped_log_position), to_char(last_log_position_time), to_char(shipped_log_position_time), to_char(seconds_between(shipped_log_position_time, last_log_position_time)) from M_SERVICE_REPLICATION order by volume_id !! Host|t,VolumeId|t,SecondaryHost,ReplicationStatus,LastLogPosition,ShippedLogPosition,DifferenceInLogPosition,LastLogPositionTime,ShippedLogPositionTime,TimeDifferenceInSeconds

default !! last_delta_replication_status !! last_delta_replication_AUTO !! select host,to_char(volume_id), secondary_host, replication_status, to_char(round(SHIPPED_LAST_DELTA_REPLICA_SIZE/1024/1024/1024,2)), to_char(shipped_last_delta_replica_start_time), to_char(shipped_last_delta_replica_end_time), to_char(seconds_between(shipped_last_delta_replica_start_time, shipped_last_delta_replica_end_time)) from M_SERVICE_REPLICATION order by volume_id !! Host|t,VolumeId|t,SecondaryHost,ReplicationStatus,DeltaReplicaInGB,StartTime|s,EndTime|s,ShippingDurationInSeconds

default !! OOM_files !! OOM_files_AUTO !! select t.host, t.red_count, t.yellow_count, t.green_count, CASE WHEN t.red_count > 0 THEN 2 WHEN t.yellow_count > 0 THEN 1 ELSE 0 END as status from (select host,count (CASE WHEN seconds_between(to_SECONDDATE(FILE_MTIME),NOW()) < 28800 THEN 1 ELSE NULL END) AS red_count, count (CASE WHEN seconds_between(to_SECONDDATE(FILE_MTIME),NOW()) between 28801 AND 86400 THEN 1 ELSE NULL END) AS yellow_count, count (CASE WHEN seconds_between(to_SECONDDATE(FILE_MTIME),NOW()) >= 86401 THEN 1 ELSE NULL END) AS green_count from M_TRACEFILES where file_name like '%oom.trc%' group by host) as t !! host|t,red_count,yellow_count,green_count,status

default !! deltaMerge_allocator !! deltaMerge_allocator_AUTO !! SELECT top 10 HOST, PORT, CATEGORY, round(EXCLUSIVE_SIZE_IN_USE/(1024*1024*1024),2) size, case when round(EXCLUSIVE_SIZE_IN_USE/(1024*1024*1024),2) > 50 then 'crit' when round(EXCLUSIVE_SIZE_IN_USE/(1024*1024*1024),2) > 35 then 'warning' else 'normal' end as status FROM M_HEAP_MEMORY where CATEGORY like 'Pool/%/Delta%' order by EXCLUSIVE_SIZE_IN_USE desc !! HOST|t,PORT|t,CATEGORY|t,size_in_GB,status|s

default !! max_DR_lag_in_min !! max_DR_lag_in_min_AUTO !! select volume_id,round(seconds_between(replayed_log_position_time, current_timestamp)/60,2) from M_SERVICE_REPLICATION !! volume_id|t,lag_time

